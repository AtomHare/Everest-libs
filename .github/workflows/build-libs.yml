name: Everest-libs build

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: libs/source
        submodules: recursive
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install build-essential git make autoconf automake libtool \
            pkg-config cmake ninja-build gnome-desktop-testing libasound2-dev libpulse-dev \
            libaudio-dev libjack-dev libsndio-dev libsamplerate0-dev libx11-dev libxext-dev \
            libxrandr-dev libxcursor-dev libxfixes-dev libxi-dev libxss-dev libwayland-dev \
            libxkbcommon-dev libdrm-dev libgbm-dev libgl1-mesa-dev libgles2-mesa-dev \
            libegl1-mesa-dev libdbus-1-dev libibus-1.0-dev libudev-dev fcitx-libs-dev \
            libpipewire-0.3-dev libdecor-0-dev
    
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8'
    
    - name: CMake configure SDL2 (Release)
      working-directory: libs/source/SDL2
      run: |
        ${{ matrix.platform.source_cmd }}
        cmake -S . -B build -G Ninja \
        -DSDL_VENDOR_INFO="Github Workflow" \
        -DCMAKE_INSTALL_PREFIX=cmake_prefix \
        -DCMAKE_BUILD_TYPE=Release
    
    - name: Build SLD2 (Release)
      working-directory: libs/source/SDL2
      run: cmake --build build/ --config Release --verbose --parallel

    - name: Install SDL2
      working-directory: libs/source/SDL2
      run: |
        set -eu
        cmake --install build/ --config Release
        echo "SDL2_DIR=$(pwd)/cmake_prefix" >> $GITHUB_ENV
        ( cd cmake_prefix; find ) | LC_ALL=C sort -u

    - name: dotnet build FNA.Core
      working-directory: libs/source/FNA
      run: dotnet build -c Release FNA.Core.csproj
    
    - name: CMake configure FAudio (Release)
      working-directory: libs/source/FNA/lib/FAudio
      run: cmake -B release -G Ninja . -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{ env.SDL2_DIR }}

    - name: Build FAudio (Release)
      working-directory: libs/source/FNA/lib/FAudio
      run: ninja -C release

    - name: CMake configure FNA3D (Release)
      working-directory: libs/source/FNA/lib/FNA3D
      run: cmake -B release -G Ninja . -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{ env.SDL2_DIR }}

    - name: Build FNA3D (Release)
      working-directory: libs/source/FNA/lib/FNA3D
      run: ninja -C release

    - name: Build Theorafile
      working-directory: libs/source/FNA/lib/Theorafile
      run: make

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Everest-libs_linux-x64
        path: |
          libs/source/SLD2/build/libSDL2-2.0.so.0
          libs/source/SLD2/build/libSDL2-2.0.so
          libs/source/FNA/bin/Release/net7.0/FNA.dll
          libs/source/FNA/lib/FAudio/release/*.so
          libs/source/FNA/lib/FAudio/release/*.so.0
          libs/source/FNA/lib/FNA3D/release/*.so
          libs/source/FNA/lib/FNA3D/release/*.so.0
          libs/source/FNA/lib/Theorafile/*.so
          libs/source/FNA/lib/Theorafile/*.so.0

  macos:
    name: macOS
    runs-on: macos-latest
    env:
      CXXFLAGS: -I/usr/local/include/SDL2
      LDFLAGS: -L/usr/local/lib
    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: libs/source/FNA
        submodules: recursive
    
    - name: Install dependencies
      run: brew install ninja sdl2

    - name: CMake configure FAudio (Release)
      working-directory: libs/source/FNA/lib/FAudio
      run: cmake -B release -G Ninja . -DCMAKE_BUILD_TYPE=Release

    - name: Build FAudio (Release)
      working-directory: libs/source/FNA/lib/FAudio
      run: ninja -C release

    - name: CMake configure FNA3D (Release)
      working-directory: libs/source/FNA/lib/FNA3D
      run: cmake -B release -G Ninja . -DCMAKE_BUILD_TYPE=Release

    - name: Build FNA3D (Release)
      working-directory: libs/source/FNA/lib/FNA3D
      run: ninja -C release

    - name: Build Theorafile
      working-directory: libs/source/FNA/lib/Theorafile
      run: make

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Everest-libs_macos-x64
        path: |
          libs/source/FNA/lib/FAudio/release/*.dylib
          libs/source/FNA/lib/FNA3D/release/*.dylib
          libs/source/FNA/lib/Theorafile/*.dylib
  
  windows-mingw:
    name: Windows (MinGW)
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    strategy:
      matrix:
        include:
          - { sys: mingw64, env: x86_64 }
          - { sys: mingw32, env: i686 }
    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: libs/source/FNA
        submodules: recursive

    - name: Set up MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.sys}}
        install: >-
          mingw-w64-${{matrix.env}}-cc
          mingw-w64-${{matrix.env}}-cmake
          mingw-w64-${{matrix.env}}-make
          mingw-w64-${{matrix.env}}-ninja
          mingw-w64-${{matrix.env}}-pkg-config
          mingw-w64-${{matrix.env}}-SDL2
    
    - name: CMake configure FAudio (Release)
      working-directory: libs/source/FNA/lib/FAudio
      run: cmake -B release -G Ninja . -DCMAKE_BUILD_TYPE=Release

    - name: Build FAudio (Release)
      working-directory: libs/source/FNA/lib/FAudio
      run: cmake --build release

    - name: CMake configure FNA3D (Release)
      working-directory: libs/source/FNA/lib/FNA3D
      run: cmake -B release -G Ninja . -DCMAKE_BUILD_TYPE=Release

    - name: Build FNA3D (Release)
      working-directory: libs/source/FNA/lib/FNA3D
      run: cmake --build release

    - name: Build Theorafile
      working-directory: libs/source/FNA/lib/Theorafile
      run: mingw32-make

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Everest-libs_win32-${{matrix.env}}
        path: |
          libs/source/FNA/lib/FAudio/release/*.dll
          libs/source/FNA/lib/FNA3D/release/*.dll
          libs/source/FNA/lib/Theorafile/*.dll