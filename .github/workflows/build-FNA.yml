name: FNA build

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: libs/source/FNA
        submodules: recursive
    
    - name: Install dependencies
      run: |
        sudo apt-add-repository ppa:hrzhu/sdl2-backport
        sudo apt-get update
        sudo apt-get install ninja-build libsdl2-dev
    
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8'

    - name: dotnet build FNA.Core
      working-directory: ./libs/source/FNA
      run: dotnet build -c Release FNA.Core.csproj
    
    - name: CMake configure FAudio (Release)
      working-directory: libs/source/FNA/lib/FAudio
      run: cmake -B release -G Ninja . -DCMAKE_BUILD_TYPE=Release

    - name: Build FAudio (Release)
      working-directory: libs/source/FNA/lib/FAudio
      run: ninja -C release

    - name: CMake configure FNA3D (Release)
      working-directory: libs/source/FNA/lib/FNA3D
      run: cmake -B release -G Ninja . -DCMAKE_BUILD_TYPE=Release

    - name: Build FNA3D (Release)
      working-directory: libs/source/FNA/lib/FNA3D
      run: ninja -C release

    - name: Build Theorafile
      working-directory: libs/source/FNA/lib/Theorafile
      run: make

  macos:
    name: macOS
    runs-on: macos-latest
    env:
      CXXFLAGS: -I/usr/local/include/SDL2
      LDFLAGS: -L/usr/local/lib
    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: libs/source/FNA
        submodules: recursive
    
    - name: Install dependencies
      run: brew install ninja sdl2

    - name: CMake configure FAudio (Release)
      working-directory: libs/source/FNA/lib/FAudio
      run: cmake -B release -G Ninja . -DCMAKE_BUILD_TYPE=Release

    - name: Build FAudio (Release)
      working-directory: libs/source/FNA/lib/FAudio
      run: ninja -C release

    - name: CMake configure FNA3D (Release)
      working-directory: libs/source/FNA/lib/FNA3D
      run: cmake -B release -G Ninja . -DCMAKE_BUILD_TYPE=Release

    - name: Build FNA3D (Release)
      working-directory: libs/source/FNA/lib/FNA3D
      run: ninja -C release

    - name: Build Theorafile
      working-directory: libs/source/FNA/lib/Theorafile
      run: make
  
  windows-mingw:
    name: Windows (MinGW)
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    strategy:
    matrix:
      include:
        - { sys: mingw64, env: x86_64 }
        - { sys: mingw32, env: i686 }
    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: libs/source/FNA
        submodules: recursive

    - name: Set up MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.sys}}
        install: >-
          mingw-w64-${{matrix.env}}-cc
          mingw-w64-${{matrix.env}}-cmake
          mingw-w64-${{matrix.env}}-make
          mingw-w64-${{matrix.env}}-ninja
          mingw-w64-${{matrix.env}}-pkg-config
          mingw-w64-${{matrix.env}}-SDL2
    
    - name: CMake configure FAudio (Release)
      working-directory: libs/source/FNA/lib/FAudio
      run: cmake -B release -G Ninja . -DCMAKE_BUILD_TYPE=Release

    - name: Build FAudio (Release)
      working-directory: libs/source/FNA/lib/FAudio
      run: cmake --build release

    - name: CMake configure FNA3D (Release)
      working-directory: libs/source/FNA/lib/FNA3D
      run: cmake -B release -G Ninja . -DCMAKE_BUILD_TYPE=Release

    - name: Build FNA3D (Release)
      working-directory: libs/source/FNA/lib/FNA3D
      run: cmake --build release

    - name: Build Theorafile
      working-directory: libs/source/FNA/lib/Theorafile
      run: mingw32-make